const Tx = require('ethereumjs-tx').Transaction
const GWEI = "Gwei"
const ETHER = "ether"
var web3Client = {}

module.exports = {
    init: function(client) {
        web3Client = client
    },
    getBalance: async function(walletAddress) {
        return await web3Client.eth.getBalance(walletAddress)
    },
    fromWei: function(wei, unit = ETHER) {
        return web3Client.utils.fromWei(wei, unit)
    },
    toWei: function(amnt, unit = ETHER) {
        return web3Client.utils.toWei(amnt, unit)
    },
    getAccounts: async function() {
        return await web3Client.eth.getAccounts()
    },
    getTransactionCount: async function (walletAddress) {
        return await web3Client.eth.getTransactionCount(walletAddress)
    },
    transfer: async function(fromAddr, fromPrivAddr, toAddr, valueToTransfer, gasPriceGwei) {
        let nonce = await this.getTransactionCount(fromAddr)
        var rawTransaction = {
            "nonce": nonce,
            "gasPrice": web3Client.utils.toHex(this.toWei(gasPriceGwei, GWEI)),
            "gasLimit": web3Client.utils.toHex("300000"), //gwei aswell
            "from": fromAddr,
            "to": toAddr,
            "value": web3Client.utils.toHex(this.toWei(valueToTransfer)),
        }

        var privateKeyHexBuffer = Buffer.from(fromPrivAddr.replace( '0x' , '' ), 'hex')

        let tx = new Tx(rawTransaction)
        tx.sign(privateKeyHexBuffer)

        var serializedTx = '0x' + tx.serialize().toString('hex')
        var txSent = await web3Client.eth.sendSignedTransaction(serializedTx)
            .catch(error => { console.log(`sendSignedTransaction-> Error: ${error.message}`)})
        return txSent
    },
    toUSD: function(gasPrice, networkToken = "ETH", unit = GWEI) {
        //1 wei = 1*10^-18 ETH
        //1 ether = 1 ETH = 1*10^18 wei
        let ethUSD = 3709
        let bnbUSD = 522

        let amnt = 0
        if (unit == GWEI) {
            amnt = gasPrice*Math.pow(10, -9)
        } else if (unit == ETHER) {
            amnt = gasPrice
        } else {
            amnt = gasPrice*Math.pow(10, -18)
        }

        if (networkToken == "BNB") {
            return amnt*bnbUSD
        } else {
            return amnt*ethUSD
        }
    }

}
